ec-config:
    conf:
      mod: oauth2
      apt: $EC_PORT
      dbg: true
      tls: false
      tim: $IsTimeController
    #group to define the authentication method of the connectivity.  
    authGroup:
    - validate: oidc
      scope: ["admin.read","subs.read","app.auth","admin","readonly","write"]
      #isOwner indicates if this oauth instance will use the auth keypair for the purpose of TLS 
      isOwner: true
      privateKey: $EC_PVTKEY
      publicCrt: 
      description: "sso license# 67824504"
      #failURL redirects any failing authentications to.
      failURL: $EC_OAUTH_FAIL_URL 
      oidc:
        vendor: sso
        domain: $EC_OIDC_DOMAIN #https://helloOauthDomain.com
        authPath: $EC_OIDC_AUTH_PATH #"/authorize"
        tokenPath: $EC_OIDC_TOKEN_PATH #"/oauth/token"
        #used for userPath calls. <token> will be replaced by the oauth token
        #"http://url/to/oauth/user/api"
        userURL: $EC_OIDC_USER_PATH
        #uathScopes used for the custom scopes admitted to oidc IdP
        authScopes: ["openid","profile"] 
        userHttpHeaders: ["Authorization:Bearer <token>","Conten-Type:application/json"]
        userHttpMethod: "GET"
        # available field-mapping for the local user. unmapped or fail-to-map fields will remain empty.
        # the rest available-to-map fields can be found here https://enterprise-connect.github.io/web-ui/webui-assets/godoc/wzschema.html#UserDetail
        userFieldIndex:
          userId: "uid"
          scope: "groupNAME"
          email: "mail"
          fullName: "cn"
          country: "country"
          dns: ""
          locality: "location"
          organization: "gessocompanyname"
          organizationalUnit: "gessobusinessunit"
          postalCode: ""
          province: "state"
          streetAddress: "street"
          role: "employeetype"
          env: ""
          license: ""    
          # end optional
        clientId: $EC_OIDC_CID
        clientSecret: $EC_OIDC_CSC
        #when not present, user will inherit the local scopes
        scopeIndex:
          "@CORP EC WebUI Admin": ["admin"]
          "@CORP EC WebUI AppOps": ["readonly"]
        #use scopeFieldType to indicate whether the scope field is in a array format, or a simply divider by character e.g. "read, write", "user:guest:admin", etc. For divider character, use ",", ":", " ", "$", "@" etc.
        scopeFieldType: "array"
